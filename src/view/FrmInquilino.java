/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import clases.Inquilino;
import clases.Propietario;
import java.lang.reflect.Array;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebastian Daniel Martinez
 * @author Jose Andres Cortes
 * @author Cristofer Angulo Lopez
 * 
 */
public class FrmInquilino extends javax.swing.JDialog {
    long cedula = 0;
    private boolean verify = false ; 
   private static  ArrayList<Inquilino> tenantList = new ArrayList<>() ;
    String[] titles =  {"Cedula","Nombre","Fecha de nacimiento","Genero","Direccion","Telefono","Email","Ocupacion"};
    DefaultTableModel modelTable  = new DefaultTableModel(null, titles);
    /**
     * Creates new form FrmPropietarios
     */
    public FrmInquilino(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //Se utiliza para centrar la ventana
        tblInquilino.setModel(modelTable);
        rbnFemenino.setSelected(true);
       tblInquilino.setVisible(false); 
       pnlTable.setVisible(false);
       if (btnModificar.isEnabled())
           btnCheck.setEnabled(false);
        this.repaint();
    }
 public FrmInquilino(java.awt.Frame parent, boolean modal, ArrayList<Inquilino> TENANT ) {
        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //Se utiliza para centrar la ventana
        tblInquilino.setModel(modelTable);
        rbnFemenino.setSelected(true);
       tblInquilino.setVisible(true); 
       pnlTable.setVisible(true);
       if (btnModificar.isEnabled())
           btnCheck.setEnabled(false);
       if (parent == null){
         verify = true ; 
         btnDelete.setVisible(false);
         btnModificar.setVisible(false);
        }
        this.repaint();
        this.tenantList = TENANT;
         loadingData();
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        rbnMasculino = new javax.swing.JRadioButton();
        rbnFemenino = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombreInquilino = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCedulaInquilino = new javax.swing.JTextField();
        txtGmailInquilino = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        btnAgregar = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtTelefono = new javax.swing.JFormattedTextField();
        jPanel3 = new javax.swing.JPanel();
        btnModificar = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtOcupacion = new javax.swing.JTextField();
        dtpFehaNacimiento = new com.github.lgooddatepicker.components.DatePicker();
        jLabel8 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        pnlTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblInquilino = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtContadorTabla = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBuscarInquilino = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        buttonGroup1.add(rbnMasculino);
        rbnMasculino.setText("Masculino ");

        buttonGroup1.add(rbnFemenino);
        rbnFemenino.setText("Femenino");

        jLabel3.setText("Direcci√≥n : ");

        jLabel1.setText("Nombre : ");

        jLabel4.setText("Telefono:");

        jLabel2.setText("Cedula  : ");

        jLabel5.setText("Gmail");

        txtCedulaInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaInquilinoKeyTyped(evt);
            }
        });

        txtGmailInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGmailInquilinoActionPerformed(evt);
            }
        });

        txtDireccion.setColumns(20);
        txtDireccion.setRows(5);
        jScrollPane1.setViewportView(txtDireccion);

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregarInquilino.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/EliminarInquilino.png"))); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificarInquilino.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        btnCheck.setText("OK");
        btnCheck.setHideActionText(true);
        btnCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCheck.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheck, javax.swing.GroupLayout.DEFAULT_SIZE, 68, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel9.setText("Ocupacion:");

        jLabel8.setText("Fecha:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(rbnMasculino, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(dtpFehaNacimiento, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(rbnFemenino, javax.swing.GroupLayout.Alignment.LEADING))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addGap(177, 177, 177))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(35, 35, 35)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addContainerGap()
                                        .addComponent(jLabel1)))
                                .addGap(55, 55, 55)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNombreInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtCedulaInquilino, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(69, 69, 69)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(49, 49, 49)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtGmailInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(42, 42, 42)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(57, 57, 57)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(23, 23, 23))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(txtCedulaInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addComponent(txtTelefono, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(txtNombreInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(txtGmailInquilino, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel5))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(rbnMasculino)
                            .addComponent(rbnFemenino)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtOcupacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dtpFehaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel3))
                    .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tblInquilino.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblInquilino.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblInquilinoMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblInquilinoMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblInquilino);

        jLabel7.setText("Cantidad de registros ");

        txtContadorTabla.setText("0");

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addGap(26, 26, 26)
                        .addComponent(txtContadorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 892, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtContadorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jLabel6.setText("Buscar: ");

        txtBuscarInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarInquilinoActionPerformed(evt);
            }
        });
        txtBuscarInquilino.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarInquilinoKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel6)
                .addGap(64, 64, 64)
                .addComponent(txtBuscarInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtBuscarInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(1, 1, 1)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtGmailInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGmailInquilinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGmailInquilinoActionPerformed

    private void txtBuscarInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarInquilinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBuscarInquilinoActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        pnlTable.setVisible(true);
      tblInquilino.setVisible(true);
      btnModificar.setEnabled(true);
        btnCheck.setEnabled(false);
        boolean controlErrores = false;
        char validarFemeninoMasculino = 'F';
        long  cedula = 0;
         String Nombre = ""; 
         String direccion = "";
         String telefono = "";
         String gmail = "";
         String ocupacion = "";
         LocalDate fechaNacimiento = null; 
         if (txtCedulaInquilino.getText().equals("") || txtNombreInquilino.getText().equals("")
                || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailInquilino.getText().equals("") || dtpFehaNacimiento.getText().equals("")) {
            controlErrores = true;
            JOptionPane.showMessageDialog(null, "Debe rellenar los campos que se le solicite ");
        }else {
          cedula = Long.parseLong(txtCedulaInquilino.getText());
        Nombre = txtNombreInquilino.getText();
         direccion = txtDireccion.getText();
         telefono = txtTelefono.getText();
         gmail = txtGmailInquilino.getText();
         ocupacion = txtOcupacion.getText();
         fechaNacimiento = dtpFehaNacimiento.getDate();
   
        }
        if (rbnMasculino.isSelected()) {
            validarFemeninoMasculino = 'M';
        } else {
            validarFemeninoMasculino = 'F';
        }
  if (!controlErrores && (!verifyExist(cedula))){
     Inquilino  tenant = new Inquilino(cedula, Nombre, validarFemeninoMasculino,direccion,telefono,gmail, fechaNacimiento, ocupacion);
     tenantList.add(tenant);
     Object[] row = {tenant.getCedula(),tenant.getNombre(),tenant.getFechNac().toString(),gender(validarFemeninoMasculino),tenant.getDireccion(),tenant.getTelefono(),tenant.getEmail(),tenant.getOcupacion()};
     modelTable.addRow(row);
     tblInquilino.setModel(modelTable);
     clean();
  }else if ( verifyExist(cedula)){
     JOptionPane.showMessageDialog(null,"El propietario con la cedula: "+cedula+ " ya existe.");
  }



// TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed
    
    private void txtCedulaInquilinoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaInquilinoKeyTyped
    int number = evt.getKeyChar();
     boolean verify = number >= 40 && number<= 57;   
      if (! verify){
        evt.consume();
       
       } 
    }//GEN-LAST:event_txtCedulaInquilinoKeyTyped

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         if ( tblInquilino.getSelectedRow() != -1){
            String owner = modelTable.getValueAt(tblInquilino.getSelectedRow(),0).toString();
            long cedula = Long.parseLong(owner);
             for (int i = 0; i <  tenantList.size(); i++) {
                 if (tenantList.get(i).getCedula() == cedula ){
                      tenantList.remove(i);
                      modelTable.removeRow(tblInquilino.getSelectedRow());
                      tblInquilino.setModel(modelTable);
                       JOptionPane.showMessageDialog(null, "Eliminado");
                      break; 
                     
                 }
             }
         }else{
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");
        
         }
  clean();

// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        boolean  verify = false ; 
        long cedula = 0; 
        try {
            cedula = Long.parseLong(txtCedulaInquilino.getText());
        } catch (NumberFormatException e) {
           verify = true ;  
        }
         
    if (txtCedulaInquilino.getText().equals("") || txtNombreInquilino.getText().equals("")
                || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailInquilino.getText().equals("")) {
          
            JOptionPane.showMessageDialog(null, "Debe rellenar los campos que se le solicite ");
        } else {
          
         if (verifyExist(cedula)  && !verify){
        pnlTable.setVisible(true);
        btnAgregar.setEnabled(false);
        btnDelete.setEnabled(false);
        txtCedulaInquilino.setEnabled(false);
      tblInquilino.setVisible(true);
      btnModificar.setEnabled(false);
      btnCheck.setEnabled(true);
        view();
         }else{
            JOptionPane.showMessageDialog(null, "No se ha insertado el registro ");
         
         }
    } 
 
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tblInquilinoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInquilinoMouseClicked
      
         
    }//GEN-LAST:event_tblInquilinoMouseClicked

    private void txtBuscarInquilinoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarInquilinoKeyReleased
        pnlTable.setVisible(true);
        tblInquilino.setVisible(true);
        String word = txtBuscarInquilino.getText();
        

        //Creaci√≥n de los modelos de los Jlist 
        DefaultListModel<String> listModel = new DefaultListModel<String>();
        DefaultTableModel modelTable = new DefaultTableModel(null, titles);
        Inquilino owner = new Inquilino();
        try {
            for (int i = 0; i < tenantList.size(); i++) {
                owner = tenantList.get(i);
                if (owner.getNombre() != null) {
                    //Con est√© linea es posible buscar palabras comparando cada char 
                    String wordTem = owner.getNombre().substring(0, word.length());
                    if (wordTem.contentEquals(txtBuscarInquilino.getText())) {
                        Object[] row = {owner.getCedula(), owner.getNombre(), owner.getDireccion(), gender(owner.getGenero()), owner.getTelefono(), owner.getEmail()};
                        modelTable.addRow(row);
                        tblInquilino.setModel(modelTable);
                        txtContadorTabla.setText("" + tblInquilino.getRowCount());
                    }
                }

            }

        } catch (StringIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "No se encontraron resultados");
            txtBuscarInquilino.setText("");
        }

        if (txtBuscarInquilino.getText().equals("")) {
            pnlTable.setVisible(false);
            tblInquilino.setVisible(false);
            tblInquilino.setModel(this.modelTable);
            txtContadorTabla.setText("" + tblInquilino.getRowCount());
        }
    }//GEN-LAST:event_txtBuscarInquilinoKeyReleased

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
       int confirm =    JOptionPane.showConfirmDialog(null, "Deseas realmente modificar este archivo?");
     if (confirm == 1){
     pnlTable.setVisible(true);
        btnAgregar.setEnabled(true);
        btnDelete.setEnabled(true);
        txtCedulaInquilino.setEnabled(true);
      tblInquilino.setVisible(true);
      btnModificar.setEnabled(true);
     clean();
     }else if(!txtCedulaInquilino.isEnabled() && tblInquilino.getSelectedRow() != -1){
      boolean controlErrores = false;
        char validarFemeninoMasculino = 'F';
        long cedula = 0;
        String Nombre = "";
        String direccion = "";
        String telefono = "";
        String gmail = "";
         String ocupacion = "";
         LocalDate fechaNacimiento = null; 
        if (txtCedulaInquilino.getText().equals("") || txtNombreInquilino.getText().equals("")
                || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailInquilino.getText().equals("")) {
            controlErrores = true;
            JOptionPane.showMessageDialog(null, "Debe rellenar los campos que se le solicite ");
        } else {
            cedula = Long.parseLong(txtCedulaInquilino.getText());
            Nombre = txtNombreInquilino.getText();
            direccion = txtDireccion.getText();
            telefono = txtTelefono.getText();
            gmail = txtGmailInquilino.getText();
            ocupacion = txtOcupacion.getText();
            fechaNacimiento = dtpFehaNacimiento.getDate();
        }
        if (rbnMasculino.isSelected()) {
            validarFemeninoMasculino = 'M';
        } else {
            validarFemeninoMasculino = 'F';
        }
     if (!controlErrores ){
          Inquilino  tenant =  modify(cedula );
          // si la clase due√±o es diferente de null entra 
          if (tenant != null){
          for (int i = 0; i < tenantList.size(); i++) {
             if (tenant == tenantList.get(i)){
                 tenant = new Inquilino(cedula, Nombre, validarFemeninoMasculino,direccion,telefono,gmail, fechaNacimiento, ocupacion);
             tenantList.set(i, tenant);
             modelTable.setValueAt(cedula, tblInquilino.getSelectedRow(),0);
             modelTable.setValueAt(Nombre, tblInquilino.getSelectedRow(),1);
             modelTable.setValueAt(direccion, tblInquilino.getSelectedRow(),2);
             modelTable.setValueAt(telefono, tblInquilino.getSelectedRow(),3);
             modelTable.setValueAt(gender(validarFemeninoMasculino), tblInquilino.getSelectedRow(),4);
              modelTable.setValueAt(gmail, tblInquilino.getSelectedRow(),5);
              JOptionPane.showMessageDialog(null, "Registro Modificado");
              
             }
         }
          }
         tblInquilino.setModel(modelTable);
         pnlTable.setVisible(true);
         btnAgregar.setEnabled(true);
         btnDelete.setEnabled(true);
         txtCedulaInquilino.setEnabled(true);
         tblInquilino.setVisible(true);
         btnModificar.setEnabled(true);
         clean();
     
  
     } 
     
     
     }else{
        JOptionPane.showMessageDialog(null,"Debe seleccionar un registro ");
     
     
     }
    }//GEN-LAST:event_btnCheckActionPerformed

    private void txtCedulaInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaInquilinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaInquilinoActionPerformed

    private void tblInquilinoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblInquilinoMousePressed
        if (verify && evt.getClickCount() ==1 && tblInquilino.getSelectedRow() != -1 ){
        FrmAlquiler.txtCedulaInquilino.setText(modelTable.getValueAt(tblInquilino.getSelectedRow(), 0).toString());
        this.setVisible(false);
       }
        
        view();
    }//GEN-LAST:event_tblInquilinoMousePressed

    private String gender(char gender) {
        if (gender == 'F') {
            return "Femenino";
        } else {
            return "Masculino";
        }


  }  
  
   
  private boolean verifyExist( long cedula ){
      for (Inquilino tenant : tenantList) {
          if (tenant.getCedula() == cedula ){
             return true;
          }
      }
  return false ;
  }
  

 private void clean(){
 txtCedulaInquilino.setText("");
 txtNombreInquilino.setText("");
 txtDireccion.setText("");
 txtTelefono.setText("");
 txtGmailInquilino.setText("");
 dtpFehaNacimiento.setText("");
 txtOcupacion.setText("");
   txtContadorTabla.setText("" + tblInquilino.getRowCount());
 }
 
 private void view(){
     if (tblInquilino.getSelectedRow() != -1) {
         this.cedula = Long.parseLong(modelTable.getValueAt(tblInquilino.getSelectedRow(), 0).toString());
         txtCedulaInquilino.setText("" + cedula);
         txtNombreInquilino.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 1));
         dtpFehaNacimiento.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 2));
         txtDireccion.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 4));
         txtTelefono.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 5));
         txtGmailInquilino.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 6));
         txtOcupacion.setText("" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 7));
         String gender = "" + modelTable.getValueAt(tblInquilino.getSelectedRow(), 3);
         if (gender.charAt(0) == 'F') {
             rbnFemenino.setSelected(true);
         } else {
             rbnMasculino.setSelected(true);

         }
     }
 
 }
  private Inquilino modify( long cedula ){
     
      for (Inquilino tenent : tenantList) {
          if (tenent.getCedula() == cedula ){
             return tenent;
          }
      }
  return null;
  }
    private void loadingData(){
        
      for (int i = 0; i < tenantList.size(); i++) {
          Inquilino  tenant = new Inquilino();
          tenant = tenantList.get(i);
         Object[] row = {tenant.getCedula(),tenant.getNombre(),tenant.getFechNac().toString(),gender(tenant.getGenero()),
             tenant.getDireccion(),tenant.getTelefono(),tenant.getEmail(),tenant.getOcupacion()};
          modelTable.addRow(row);
      }
  
     tblInquilino.setModel(modelTable);
  
  }
 
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmInquilino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmInquilino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmInquilino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmInquilino.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmInquilino dialog = new FrmInquilino(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {          
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private com.github.lgooddatepicker.components.DatePicker dtpFehaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JRadioButton rbnFemenino;
    private javax.swing.JRadioButton rbnMasculino;
    private javax.swing.JTable tblInquilino;
    private javax.swing.JTextField txtBuscarInquilino;
    private javax.swing.JTextField txtCedulaInquilino;
    private javax.swing.JTextField txtContadorTabla;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtGmailInquilino;
    private javax.swing.JTextField txtNombreInquilino;
    private javax.swing.JTextField txtOcupacion;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
