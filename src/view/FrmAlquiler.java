/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import clases.Alquileres;
import clases.Inquilino;
import clases.Propietario;
import clases.Vivienda;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Cristofer
 */
public class FrmAlquiler extends javax.swing.JDialog {

    private static ArrayList<Vivienda> Home = new ArrayList<>();
    private static ArrayList<Inquilino> tenent = new ArrayList<>();
    private static ArrayList<Alquileres> alquiler = new ArrayList<>();
    private static ArrayList<Propietario> owner = new ArrayList<>();
    private String[] titles = {"Numero de alquileres", "Fecha de contrato", "Cantidad de meses ", "Numero de adultos", "Numero de ni√±os", "Deposito dde garantia", "Precio Alquiler", "Porcentaje incremento anual", "Cedula inquilino", "Id Vivienda", "Estado"};
    DefaultTableModel modelTable = new DefaultTableModel(null, titles);
    String[] titlesEstado = {"Vigente","Vencido", "Cancelado"};
    DefaultComboBoxModel<String> estado = new DefaultComboBoxModel<>(titlesEstado);
    int valor;

    public FrmAlquiler(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();

    }

    public FrmAlquiler(java.awt.Frame parent, boolean modal, ArrayList<Inquilino> tenant, ArrayList<Vivienda> home, ArrayList<Alquileres> rentals, ArrayList<Propietario> owner) {
        super(parent, modal);
        initComponents();
        this.Home = home;
        this.tenent = tenant;
        this.alquiler = rentals;
        this.owner = owner;
        cbxEstado.setModel(estado);
        txtCedulaInquilino.setEditable(false);
        txtIdVivienda.setEditable(false);
        loadingData();
        tbbdCreate.setEnabledAt(1, false);
        txtNumeroAlquiler.setText("" + idAlquiler());
        txtNumeroAlquiler.setEditable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tbbdCreate = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlCrud = new javax.swing.JPanel();
        Agregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        lblBuscar = new javax.swing.JLabel();
        txtBuscar = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAlquileresDatos = new javax.swing.JTable();
        pnladd = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cbxEstado = new javax.swing.JComboBox<>();
        jLabel13 = new javax.swing.JLabel();
        btbGuardar = new javax.swing.JButton();
        txtNumeroAlquiler = new javax.swing.JTextField();
        txtCantidadMeses = new javax.swing.JTextField();
        txtNumeroAdultos = new javax.swing.JTextField();
        txtNumeroNinos = new javax.swing.JTextField();
        txtDepositoGarantia = new javax.swing.JTextField();
        txtPrecioAlquiler = new javax.swing.JTextField();
        txtCedulaInquilino = new javax.swing.JTextField();
        txtIdVivienda = new javax.swing.JTextField();
        dtpFehaNacimiento = new com.github.lgooddatepicker.components.DatePicker();
        spnIncremento = new javax.swing.JSpinner();
        btnBuscarInquilino = new javax.swing.JButton();
        btnBuscarIdVivienda = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alquileres");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });

        Agregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevoAlquiler.png"))); // NOI18N
        Agregar.setText("Agregar");
        Agregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        Agregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        Agregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AgregarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminarVivienda.png"))); // NOI18N
        btnEliminar.setText("Eliminar ");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificarInquilino.png"))); // NOI18N
        btnModify.setText("Modificar");
        btnModify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        lblBuscar.setText("Buscar : ");

        txtBuscar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarKeyReleased(evt);
            }
        });

        tblAlquileresDatos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(tblAlquileresDatos);

        javax.swing.GroupLayout pnlCrudLayout = new javax.swing.GroupLayout(pnlCrud);
        pnlCrud.setLayout(pnlCrudLayout);
        pnlCrudLayout.setHorizontalGroup(
            pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1160, Short.MAX_VALUE)
            .addGroup(pnlCrudLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Agregar, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(lblBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(51, 51, 51)
                .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCrudLayout.setVerticalGroup(
            pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCrudLayout.createSequentialGroup()
                .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCrudLayout.createSequentialGroup()
                        .addGap(92, 92, 92)
                        .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscar)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCrudLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Agregar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnEliminar, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnModify, javax.swing.GroupLayout.Alignment.TRAILING))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 73, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCrud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbbdCreate.addTab("Alquiler", jPanel1);

        jLabel3.setText("Numero de Alquiler:");

        jLabel4.setText("Fecha de Contrato:");

        jLabel5.setText("Cantidad de Meses:");

        jLabel6.setText("Numero de Adultos:");

        jLabel7.setText("Numero de Ni√±os:");

        jLabel8.setText("Deposito de garantia:");

        jLabel9.setText("Precio de Alquiler:");

        jLabel10.setText("Porcentaje de incremento anual:");

        jLabel11.setText("ID Vivienda :");

        jLabel12.setText("Estado:");

        jLabel13.setText("Cedula del inquilino:");

        btbGuardar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        btbGuardar.setText("OK");
        btbGuardar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btbGuardar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btbGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btbGuardarActionPerformed(evt);
            }
        });

        txtNumeroAlquiler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroAlquilerKeyTyped(evt);
            }
        });

        txtCantidadMeses.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadMesesKeyTyped(evt);
            }
        });

        txtNumeroAdultos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroAdultosKeyTyped(evt);
            }
        });

        txtNumeroNinos.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtNumeroNinosKeyTyped(evt);
            }
        });

        txtDepositoGarantia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtDepositoGarantiaKeyTyped(evt);
            }
        });

        txtPrecioAlquiler.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioAlquilerKeyTyped(evt);
            }
        });

        txtCedulaInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtCedulaInquilinoActionPerformed(evt);
            }
        });

        txtIdVivienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdViviendaActionPerformed(evt);
            }
        });

        btnBuscarInquilino.setText("Buscar");
        btnBuscarInquilino.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarInquilinoActionPerformed(evt);
            }
        });

        btnBuscarIdVivienda.setText("Buscar");
        btnBuscarIdVivienda.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarIdViviendaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnladdLayout = new javax.swing.GroupLayout(pnladd);
        pnladd.setLayout(pnladdLayout);
        pnladdLayout.setHorizontalGroup(
            pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnladdLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(18, 18, 18)
                        .addComponent(txtDepositoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtNumeroAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCantidadMeses)
                            .addComponent(txtNumeroAdultos)
                            .addComponent(txtNumeroNinos)))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(dtpFehaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(79, 79, 79)
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(80, 80, 80))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(pnladdLayout.createSequentialGroup()
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(pnladdLayout.createSequentialGroup()
                                                .addGap(0, 0, Short.MAX_VALUE)
                                                .addComponent(btbGuardar, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addComponent(jLabel13, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(btnBuscarIdVivienda)
                                            .addComponent(btnBuscarInquilino, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(spnIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(txtPrecioAlquiler, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                .addComponent(txtCedulaInquilino)
                                .addComponent(txtIdVivienda)))
                        .addGap(409, 409, 409))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(525, 663, Short.MAX_VALUE))))
        );
        pnladdLayout.setVerticalGroup(
            pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnladdLayout.createSequentialGroup()
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel9)
                            .addComponent(txtNumeroAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPrecioAlquiler, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(jLabel10)
                            .addComponent(dtpFehaNacimiento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spnIncremento, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel13)
                            .addComponent(txtCantidadMeses, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtCedulaInquilino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarInquilino))
                        .addGap(18, 18, 18)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel11)
                            .addComponent(txtIdVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscarIdVivienda))
                        .addGap(19, 19, 19))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(txtNumeroAdultos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jLabel7)
                    .addComponent(txtNumeroNinos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbxEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(txtDepositoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 87, Short.MAX_VALUE)
                .addComponent(btbGuardar)
                .addGap(133, 133, 133))
        );

        tbbdCreate.addTab("Crear", pnladd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbbdCreate)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbbdCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void AgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AgregarActionPerformed
        valor = 1;
        txtNumeroAlquiler.setText("" + idAlquiler());
        tbbdCreate.setSelectedIndex(1);
        tbbdCreate.setVisible(true);
        tbbdCreate.setTitleAt(1, "Agregar");

    }//GEN-LAST:event_AgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Deletedata();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed

        if (tblAlquileresDatos.getSelectedRow() != -1) {
            view();
            valor = 3;
            tbbdCreate.setSelectedIndex(1);
            tbbdCreate.setVisible(true);
            tbbdCreate.setTitleAt(1, "Modificar");
        } else {
            JOptionPane.showMessageDialog(null, "Debe Seleccionar un usuario ");

        }
    }//GEN-LAST:event_btnModifyActionPerformed

    private void btbGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btbGuardarActionPerformed
        if (valor == 1) {
            insertData();
        } else if (valor == 3) {
            modify();
        }


    }//GEN-LAST:event_btbGuardarActionPerformed

    private void txtCedulaInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtCedulaInquilinoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtCedulaInquilinoActionPerformed

    private void txtIdViviendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdViviendaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdViviendaActionPerformed

    private void btnBuscarInquilinoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarInquilinoActionPerformed

        FrmInquilino Inquilino = new FrmInquilino(null, true, tenent);
        Inquilino.setVisible(true);
    }//GEN-LAST:event_btnBuscarInquilinoActionPerformed

    private void btnBuscarIdViviendaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarIdViviendaActionPerformed
        FrmVivienda home = new FrmVivienda(null, true, owner, Home);
        home.setVisible(true);
    }//GEN-LAST:event_btnBuscarIdViviendaActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        if (txtCedulaInquilino.getText().length() > 0) {
            if(txtCedulaInquilino.getText().charAt(0) != 'D'){
            verifyIdInquilino(Long.parseLong(txtCedulaInquilino.getText()));
            }
        }
        if (txtIdVivienda.getText().length() > 0 && txtIdVivienda.getText().charAt(0) != 'D') {
            if (txtIdVivienda.getText().charAt(0) != 'D'){
            verifyIdVivienda(Long.parseLong(txtIdVivienda.getText()));
            }
        }
    }//GEN-LAST:event_formWindowGainedFocus

    private void txtBuscarKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarKeyReleased
        
    }//GEN-LAST:event_txtBuscarKeyReleased

    private void txtNumeroAdultosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroAdultosKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtNumeroAdultosKeyTyped

    private void txtNumeroNinosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroNinosKeyTyped
        onlyNumber(evt);
    }//GEN-LAST:event_txtNumeroNinosKeyTyped

    private void txtDepositoGarantiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtDepositoGarantiaKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtDepositoGarantiaKeyTyped

    private void txtCantidadMesesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadMesesKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtCantidadMesesKeyTyped

    private void txtNumeroAlquilerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNumeroAlquilerKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtNumeroAlquilerKeyTyped

    private void txtPrecioAlquilerKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioAlquilerKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtPrecioAlquilerKeyTyped

    private boolean insertData() {
        //pnlTable.setVisible(false);
        tblAlquileresDatos.setVisible(true);
        //btnModificar.setEnabled(true);
        //btnCheck.setEnabled(false);
        boolean controlErrores = false;
        int cantidadMeses = 0;
        long cedulaInquilino = 0;
        int depositoGarantia = 0;
        LocalDate FechaContrato = null;
        long idVivienda = 0;
        int numeroAdultos = 0;
        long numeroAlquiler = 0;
        int numeroNinos = 0;
        int porcentajeINcrementoAnual = 0;
        int precioAlquiler = 0;

        if (txtNumeroAlquiler.getText().equals("") || txtNumeroNinos.getText().equals("")
                || txtCantidadMeses.getText().equals("") || txtNumeroAdultos.getText().equals("") || txtNumeroNinos.getText().equals("")
                || txtDepositoGarantia.getText().equals("") || txtPrecioAlquiler.getText().equals("")
                || txtCedulaInquilino.getText().equals("") || txtIdVivienda.getText().equals("")) {
            controlErrores = true;
            JOptionPane.showMessageDialog(null, "Ingrese los campos que se le solicite ");
        }
        if (!controlErrores) {
            try {

                cantidadMeses = Integer.parseInt(txtCantidadMeses.getText());
                cedulaInquilino = Long.parseLong(txtCedulaInquilino.getText());
                depositoGarantia = Integer.parseInt(txtDepositoGarantia.getText());
                idVivienda = Integer.parseInt(txtIdVivienda.getText());
                numeroAdultos = Integer.parseInt(txtNumeroAdultos.getText());
                numeroAlquiler = Long.parseLong(txtNumeroAlquiler.getText());
                numeroNinos = Integer.parseInt(txtNumeroNinos.getText());
                porcentajeINcrementoAnual = Integer.parseInt(spnIncremento.getValue().toString());
                precioAlquiler = Integer.parseInt(txtPrecioAlquiler.getText());
                FechaContrato = dtpFehaNacimiento.getDate();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Ingrese datos numericos");
                controlErrores = true;
            }
            if (!controlErrores) {

                Alquileres rentals = new Alquileres(numeroAlquiler, FechaContrato, cantidadMeses, numeroAdultos, numeroNinos, depositoGarantia, precioAlquiler, porcentajeINcrementoAnual, cedulaInquilino, idVivienda, estado.getSelectedItem().toString());
                alquiler.add(rentals);
                Object[] row = {rentals.getNumAlquiler(), rentals.getFechContrato(), rentals.getCantMeses(), rentals.getNumAdultos(), rentals.getNumNinos(), rentals.getDepositoGarantia(), rentals.getPrecioAlquiler(), rentals.getPorcIncremAnual(), rentals.getCedInquilino(), rentals.getIdVivienda(), rentals.getEstado()};
                modelTable.addRow(row);
                tblAlquileresDatos.setModel(modelTable);
                clean();
            }

        }
        return true;
    }

    private boolean verifyData() {
        if (txtNumeroAlquiler.getText().equals("") || txtNumeroNinos.getText().equals("")
                || txtCantidadMeses.getText().equals("") || txtNumeroAdultos.getText().equals("") || txtNumeroNinos.getText().equals("")
                || txtDepositoGarantia.getText().equals("") || txtPrecioAlquiler.getText().equals("")
                || txtCedulaInquilino.getText().equals("") || txtIdVivienda.getText().equals("")) {
            return true;
        } else {
            return false;

        }
    }

    private long idAlquiler() {

        long idAlquiler = 0;
        if (alquiler.size() == 0) {
            idAlquiler = 1;

        } else if (alquiler.size() == 1) {
            idAlquiler = 2;
        } else {
            idAlquiler = alquiler.size() + 1;
        }

        return idAlquiler;
    }

    private void onlyNumber(java.awt.event.KeyEvent evt) {
        int number = evt.getKeyChar();
        boolean verify = number >= 40 && number <= 57;
        if (!verify) {
            evt.consume();

        }
    }

    private Alquileres verifyAlquiler(long idAlquiler) {
        for (int i = 0; i < alquiler.size(); i++) {
            if (idAlquiler == alquiler.get(i).getNumAlquiler()) {
                Alquileres rentals = this.alquiler.get(i);
                return rentals;
            }
        }

        return null;
    }

    private boolean Deletedata() {

        if (tblAlquileresDatos.getSelectedRow() != -1) {
            String IdAlquilerData = modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 0).toString();
            long Idviviendas = Long.parseLong(IdAlquilerData);
            for (int i = 0; i < alquiler.size(); i++) {
                if (alquiler.get(i).getNumAlquiler() == Idviviendas) {
                    alquiler.remove(i);
                    modelTable.removeRow(tblAlquileresDatos.getSelectedRow());
                    tblAlquileresDatos.setModel(modelTable);
                    JOptionPane.showMessageDialog(null, "Propietario Eliminado!");

                    break;

                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");

        }

        clean();

        return true;

    }

    private void clean() {
        txtIdVivienda.setText("");
        txtNumeroAlquiler.setText("");
        txtNumeroAdultos.setText("");
        txtDepositoGarantia.setText("");
        txtNumeroNinos.setText("");
        txtPrecioAlquiler.setText("");
        txtCantidadMeses.setText("");

    }

    private void modify() {
        //inicialisamos la informacion apenas entre el clip 

        if (tblAlquileresDatos.getSelectedRow() != -1) {
            boolean controlErrores = false;
            int cantidadMeses = 0;
            long cedulaInquilino = 0;
            int depositoGarantia = 0;
            LocalDate FechaContrato = null;
            long idVivienda = 0;
            int numeroAdultos = 0;
            long numeroAlquiler = 0;
            int numeroNinos = 0;
            int porcentajeINcrementoAnual = 0;
            int precioAlquiler = 0;
            if (verifyData()) {
                JOptionPane.showMessageDialog(null, "Ingrese los campos que se le solicite ");
            } else {
                try {
                    cantidadMeses = Integer.parseInt(txtCantidadMeses.getText());
                    cedulaInquilino = Long.parseLong(txtCedulaInquilino.getText());
                    depositoGarantia = Integer.parseInt(txtDepositoGarantia.getText());
                    idVivienda = Integer.parseInt(txtIdVivienda.getText());
                    numeroAdultos = Integer.parseInt(txtNumeroAdultos.getText());
                    numeroAlquiler = Long.parseLong(txtNumeroAlquiler.getText());
                    numeroNinos = Integer.parseInt(txtNumeroNinos.getText());
                    porcentajeINcrementoAnual = Integer.parseInt(spnIncremento.getValue().toString());
                    precioAlquiler = Integer.parseInt(txtPrecioAlquiler.getText());
                    FechaContrato = dtpFehaNacimiento.getDate();

                } catch (Exception e) {
                    JOptionPane.showMessageDialog(null, "Ingrese el formato adecuado ");
                    controlErrores = true;
                }

            }

            if (!controlErrores) {
                Alquileres rentals = verifyAlquiler(numeroAlquiler);

                // si la clase due√±o es diferente de null entra 
                if (rentals != null) {

                    for (int i = 0; i < alquiler.size(); i++) {

                        if (rentals == alquiler.get(i)) {

                            rentals = new Alquileres(numeroAlquiler, FechaContrato, cantidadMeses, numeroAdultos, numeroNinos, depositoGarantia, precioAlquiler, porcentajeINcrementoAnual, cedulaInquilino, idVivienda, estado.getSelectedItem().toString());
                            alquiler.set(i, rentals);
                            modelTable.setValueAt(rentals.getNumAlquiler(), tblAlquileresDatos.getSelectedRow(), 0);
                            modelTable.setValueAt(rentals.getFechContrato(), tblAlquileresDatos.getSelectedRow(), 1);
                            modelTable.setValueAt(rentals.getCantMeses(), tblAlquileresDatos.getSelectedRow(), 2);
                            modelTable.setValueAt(rentals.getNumAdultos(), tblAlquileresDatos.getSelectedRow(), 3);
                            modelTable.setValueAt(rentals.getNumNinos(), tblAlquileresDatos.getSelectedRow(), 4);
                            modelTable.setValueAt(rentals.getDepositoGarantia(), tblAlquileresDatos.getSelectedRow(), 5);
                            modelTable.setValueAt(rentals.getPrecioAlquiler(), tblAlquileresDatos.getSelectedRow(), 6);
                            modelTable.setValueAt(rentals.getPorcIncremAnual(), tblAlquileresDatos.getSelectedRow(), 7);
                            modelTable.setValueAt(rentals.getCedInquilino(), tblAlquileresDatos.getSelectedRow(), 8);
                            modelTable.setValueAt(rentals.getIdVivienda(), tblAlquileresDatos.getSelectedRow(), 9);
                            modelTable.setValueAt(rentals.getEstado(), tblAlquileresDatos.getSelectedRow(), 10);
                            JOptionPane.showMessageDialog(null, "Registro Modificado");

                        }
                    }
                }

                clean();
                tbbdCreate.setSelectedIndex(0);
            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro ");

        }

    }

    private void loadingData() {
        tblAlquileresDatos.setVisible(true);
        for (int i = 0; i < alquiler.size(); i++) {
            Object[] row = {alquiler.get(i).getNumAlquiler(), alquiler.get(i).getFechContrato(), alquiler.get(i).getCantMeses(), alquiler.get(i).getNumAdultos(), alquiler.get(i).getNumNinos(), alquiler.get(i).getDepositoGarantia(), alquiler.get(i).getPrecioAlquiler(), alquiler.get(i).getPorcIncremAnual(), alquiler.get(i).getCedInquilino(), alquiler.get(i).getIdVivienda(), alquiler.get(i).getEstado()};
            modelTable.addRow(row);
        }

        tblAlquileresDatos.setModel(modelTable);

    }

    private void view() {
        if (tblAlquileresDatos.getSelectedRow() != -1) {
            txtNumeroAlquiler.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 0));
            dtpFehaNacimiento.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 1));
            txtCantidadMeses.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 2));
            txtNumeroAdultos.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 3));
            txtNumeroNinos.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 4));
            txtDepositoGarantia.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 5));
            txtPrecioAlquiler.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 6));
            spnIncremento.setValue(modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 7));
            txtCedulaInquilino.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 8));
            txtIdVivienda.setText("" + modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 9));
            estado.setSelectedItem(modelTable.getValueAt(tblAlquileresDatos.getSelectedRow(), 10));

        }

    }

    public void verifyIdInquilino(long idCedulaInquilino) {
        for (int i = 0; i < alquiler.size(); i++) {
            if (idCedulaInquilino == alquiler.get(i).getCedInquilino()) {
                txtCedulaInquilino.setText("Debe agregar un IdDiferente!");
            }
        }

    }

    public void verifyIdVivienda(long idVivienda) {
        for (int i = 0; i < alquiler.size(); i++) {
            if (idVivienda == alquiler.get(i).getIdVivienda()) {
               txtIdVivienda.setText("Debe agregar un Id diferente !");
            }
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAlquiler.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmAlquiler dialog = new FrmAlquiler(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Agregar;
    private javax.swing.JButton btbGuardar;
    private javax.swing.JButton btnBuscarIdVivienda;
    private javax.swing.JButton btnBuscarInquilino;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModify;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxEstado;
    private com.github.lgooddatepicker.components.DatePicker dtpFehaNacimiento;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBuscar;
    private javax.swing.JPanel pnlCrud;
    private javax.swing.JPanel pnladd;
    private javax.swing.JSpinner spnIncremento;
    private javax.swing.JTabbedPane tbbdCreate;
    private javax.swing.JTable tblAlquileresDatos;
    private javax.swing.JTextField txtBuscar;
    private javax.swing.JTextField txtCantidadMeses;
    public static javax.swing.JTextField txtCedulaInquilino;
    private javax.swing.JTextField txtDepositoGarantia;
    public static javax.swing.JTextField txtIdVivienda;
    private javax.swing.JTextField txtNumeroAdultos;
    private javax.swing.JTextField txtNumeroAlquiler;
    private javax.swing.JTextField txtNumeroNinos;
    private javax.swing.JTextField txtPrecioAlquiler;
    // End of variables declaration//GEN-END:variables
}
