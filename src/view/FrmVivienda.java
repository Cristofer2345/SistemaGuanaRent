/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import clases.Propietario;
import clases.Vivienda;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import static view.FrmAlquiler.txtCedulaInquilino;

/**
 *
 * @author Cristofer
 */
public class FrmVivienda extends javax.swing.JDialog {

   private static  ArrayList<Vivienda> Home = new ArrayList<>();
   private static    ArrayList<Propietario> owner  = new ArrayList<>();
  private boolean verify = false ; 
    private String[] itemsCarretera = {"Lastre", "Pavimentada", "Adoquinada"};
    private String[] itemsConstruccion = {"Block", "Baldosa", "madera", "mixta"};
    private String[] titles = {"IdViviendas", "Descripcion", "Direccion", "Mtrs_cuadados", "Metros_Lote", "Tipo de Construccion", "Cochera", "cantidad de habitaciones ", "cantidad de ba√±os", "carretera", "Precio base", "Deposito de garantia", "Propietario", "Estado "};
    DefaultTableModel modelTable = new DefaultTableModel(null, titles);
    DefaultComboBoxModel<String> modelComboConstruccion = new DefaultComboBoxModel<>(itemsConstruccion);
    DefaultListModel<String> listModel = new DefaultListModel<>();
    DefaultComboBoxModel<String> modelComboCarretera = new DefaultComboBoxModel<>(itemsCarretera);
    int valor;

    public FrmVivienda(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        cbxTipoConstruccion.setModel(modelComboConstruccion);
        cbxCarretera.setModel(modelComboCarretera);
    }

    public FrmVivienda(java.awt.Frame parent, boolean modal, ArrayList<Propietario> owner, ArrayList<Vivienda> home) {
        super(parent, modal);
        initComponents();
        this.Home = home;
        this.owner = owner;
        rbnDisponible.setSelected(true);
        cbxTipoConstruccion.setModel(modelComboConstruccion);
        cbxCarretera.setModel(modelComboCarretera);
       txtIdOwner.setEditable(false);
        tblHome.setModel(modelTable);
        tbbdCreate.setEnabledAt(1, false);
         if (parent == null){
         verify = true ; 
         btnModify.setVisible(false);
         btnEliminar.setVisible(false);
        }
         loadingData();
       rbnDisponible.setSelected(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPopupMenu1 = new javax.swing.JPopupMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jLabel1 = new javax.swing.JLabel();
        buttonGroup1 = new javax.swing.ButtonGroup();
        tbbdCreate = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        pnlCrud = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnEliminar = new javax.swing.JButton();
        btnModify = new javax.swing.JButton();
        lblBuscarVivienda = new javax.swing.JLabel();
        txtBuscarVivienda = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHome = new javax.swing.JTable();
        pnladd = new javax.swing.JPanel();
        IdViviendas = new javax.swing.JLabel();
        txtIdViviendas = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtpDescripcion = new javax.swing.JTextPane();
        jLabel4 = new javax.swing.JLabel();
        txtDireccion = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtmtsConstruct = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtMtsLote = new javax.swing.JTextField();
        cbxTipoConstruccion = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        rbnCochera = new javax.swing.JRadioButton();
        jLabel8 = new javax.swing.JLabel();
        txtHabitaciones = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbxCarretera = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        txtPrecioBase = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        txtdepositoGarantia = new javax.swing.JTextField();
        Propietario = new javax.swing.JLabel();
        rbnAlquilada = new javax.swing.JRadioButton();
        rbnDisponible = new javax.swing.JRadioButton();
        rbnInactiva = new javax.swing.JRadioButton();
        btnAceptar = new javax.swing.JButton();
        txtCantidadBanios = new javax.swing.JTextField();
        txtIdOwner = new javax.swing.JTextField();
        btnBuscar = new javax.swing.JButton();

        jMenuItem1.setText("jMenuItem1");

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/nuevoAlquiler.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnEliminar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/eliminarVivienda.png"))); // NOI18N
        btnEliminar.setText("Eliminar ");
        btnEliminar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnEliminar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });

        btnModify.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificar.png"))); // NOI18N
        btnModify.setText("Modificar");
        btnModify.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModify.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModifyActionPerformed(evt);
            }
        });

        lblBuscarVivienda.setText("Buscar: ");

        tblHome.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblHome.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblHomeMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tblHome);

        javax.swing.GroupLayout pnlCrudLayout = new javax.swing.GroupLayout(pnlCrud);
        pnlCrud.setLayout(pnlCrudLayout);
        pnlCrudLayout.setHorizontalGroup(
            pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1187, Short.MAX_VALUE)
            .addGroup(pnlCrudLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btnAgregar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnEliminar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(31, 31, 31)
                .addComponent(btnModify, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(lblBuscarVivienda)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtBuscarVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, 302, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlCrudLayout.setVerticalGroup(
            pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlCrudLayout.createSequentialGroup()
                .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlCrudLayout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnEliminar)
                            .addComponent(btnAgregar)
                            .addComponent(btnModify)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlCrudLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(pnlCrudLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscarVivienda, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblBuscarVivienda))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlCrud, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(pnlCrud, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        tbbdCreate.addTab("Vivienda", jPanel1);

        IdViviendas.setText("Id_Viviendas");

        txtIdViviendas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                txtIdViviendasMousePressed(evt);
            }
        });
        txtIdViviendas.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtIdViviendasKeyTyped(evt);
            }
        });

        jLabel3.setText("Descripci√≥n ");

        jScrollPane2.setViewportView(txtpDescripcion);

        jLabel4.setText("Direcci√≥n ");

        jLabel5.setText("mtsConstruct ");

        txtmtsConstruct.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtmtsConstructKeyTyped(evt);
            }
        });

        jLabel6.setText("mtsLote ");

        txtMtsLote.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtMtsLoteKeyTyped(evt);
            }
        });

        cbxTipoConstruccion.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tipo de construcci√≥n " }));
        cbxTipoConstruccion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxTipoConstruccionActionPerformed(evt);
            }
        });

        jLabel7.setText("Tipo de Construccion ");

        rbnCochera.setText("Cochera ");
        rbnCochera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbnCocheraActionPerformed(evt);
            }
        });

        jLabel8.setText("cantidad de Habitac");

        txtHabitaciones.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtHabitacionesKeyTyped(evt);
            }
        });

        jLabel9.setText("cantBanios ");

        cbxCarretera.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Carretera" }));
        cbxCarretera.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbxCarreteraActionPerformed(evt);
            }
        });

        jLabel10.setText("PrecioBase:");

        txtPrecioBase.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPrecioBaseKeyTyped(evt);
            }
        });

        jLabel11.setText("depositoGarantia:");

        txtdepositoGarantia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtdepositoGarantiaKeyTyped(evt);
            }
        });

        Propietario.setText("Propietario");
        Propietario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        buttonGroup1.add(rbnAlquilada);
        rbnAlquilada.setText("Alquilada");

        buttonGroup1.add(rbnDisponible);
        rbnDisponible.setText("Disponible");

        buttonGroup1.add(rbnInactiva);
        rbnInactiva.setText("Inactiva");

        btnAceptar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        btnAceptar.setText("Aceptar");
        btnAceptar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAceptar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAceptarActionPerformed(evt);
            }
        });

        txtCantidadBanios.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCantidadBaniosKeyTyped(evt);
            }
        });

        txtIdOwner.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdOwnerActionPerformed(evt);
            }
        });

        btnBuscar.setText("Buscar");
        btnBuscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnladdLayout = new javax.swing.GroupLayout(pnladd);
        pnladd.setLayout(pnladdLayout);
        pnladdLayout.setHorizontalGroup(
            pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnladdLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addGap(208, 1135, Short.MAX_VALUE))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IdViviendas, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5))
                                .addGap(18, 18, 18)
                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                        .addComponent(txtIdViviendas, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 80, Short.MAX_VALUE)
                                        .addComponent(jLabel7)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(rbnCochera)
                                            .addComponent(cbxTipoConstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtMtsLote, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                                            .addComponent(txtmtsConstruct, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtDireccion, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING))
                                        .addGap(58, 58, 58)
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel8)
                                            .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                .addComponent(jLabel10)
                                                .addComponent(jLabel9))
                                            .addGroup(pnladdLayout.createSequentialGroup()
                                                .addGap(1, 1, 1)
                                                .addComponent(jLabel11)))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                                .addComponent(txtHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(11, 11, 11))
                                            .addComponent(txtPrecioBase, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtdepositoGarantia, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(txtCantidadBanios, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(cbxCarretera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                .addGap(42, 42, 42)))))))
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(rbnAlquilada)
                                .addGap(34, 34, 34)
                                .addComponent(rbnInactiva))
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addGap(88, 88, 88)
                                .addComponent(rbnDisponible))
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addGap(19, 19, 19)
                                .addComponent(Propietario)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, 69, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtIdOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(276, 276, 276))))
            .addGroup(pnladdLayout.createSequentialGroup()
                .addGap(500, 500, 500)
                .addComponent(btnAceptar, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnladdLayout.setVerticalGroup(
            pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnladdLayout.createSequentialGroup()
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbxTipoConstruccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(IdViviendas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtIdViviendas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Propietario)
                            .addComponent(txtIdOwner, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnBuscar))
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel3))
                            .addGroup(pnladdLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel8)
                                    .addGroup(pnladdLayout.createSequentialGroup()
                                        .addComponent(rbnCochera)
                                        .addGap(1, 1, 1)
                                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnladdLayout.createSequentialGroup()
                                                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                                    .addComponent(txtHabitaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(rbnAlquilada)
                                                    .addComponent(rbnInactiva))
                                                .addGap(3, 3, 3)))))))
                        .addGap(39, 39, 39)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtDireccion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel9)
                                .addComponent(txtCantidadBanios, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(rbnDisponible)))
                .addGap(13, 13, 13)
                .addComponent(cbxCarretera, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(txtmtsConstruct, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(pnladdLayout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(txtPrecioBase, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnladdLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(txtMtsLote, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11)
                    .addComponent(txtdepositoGarantia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(54, 54, 54)
                .addComponent(btnAceptar)
                .addContainerGap(126, Short.MAX_VALUE))
        );

        tbbdCreate.addTab("Crear", pnladd);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbbdCreate)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(tbbdCreate, javax.swing.GroupLayout.PREFERRED_SIZE, 601, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(26, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cbxTipoConstruccionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxTipoConstruccionActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxTipoConstruccionActionPerformed

    private void cbxCarreteraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbxCarreteraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbxCarreteraActionPerformed

    private void btnAceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAceptarActionPerformed
        if (valor == 1) {
            insertData();
        }
        if (valor == 3) {
            modify();
        }
    }//GEN-LAST:event_btnAceptarActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        valor = 1;
        txtIdViviendas.setEnabled(true);
        tbbdCreate.setSelectedIndex(1);
        tbbdCreate.setVisible(true);
        tbbdCreate.setTitleAt(1, "Agregar");

    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        Deletedata();
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnModifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModifyActionPerformed
        valor = 3;
        tbbdCreate.setSelectedIndex(1);
        tbbdCreate.setVisible(true);
        tbbdCreate.setTitleAt(1, "Modificar");
        txtIdViviendas.setEnabled(false);
    }//GEN-LAST:event_btnModifyActionPerformed

    private void rbnCocheraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbnCocheraActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rbnCocheraActionPerformed

    private void txtmtsConstructKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtmtsConstructKeyTyped
        onlyNumber(evt);
    }//GEN-LAST:event_txtmtsConstructKeyTyped

    private void txtMtsLoteKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMtsLoteKeyTyped

        onlyNumber(evt);
    }//GEN-LAST:event_txtMtsLoteKeyTyped

    private void txtPrecioBaseKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPrecioBaseKeyTyped
        onlyNumber(evt);
    }//GEN-LAST:event_txtPrecioBaseKeyTyped

    private void txtdepositoGarantiaKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtdepositoGarantiaKeyTyped
        onlyNumber(evt);
    }//GEN-LAST:event_txtdepositoGarantiaKeyTyped

    private void tblHomeMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHomeMousePressed
        if (verify && evt.getClickCount() ==1 && tblHome.getSelectedRow() != -1 ){
        FrmAlquiler.txtIdVivienda.setText(modelTable.getValueAt(tblHome.getSelectedRow(), 0).toString());
        this.setVisible(false);
        }
    }//GEN-LAST:event_tblHomeMousePressed

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
     
    }//GEN-LAST:event_formWindowActivated

    private void btnBuscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarActionPerformed
      FrmPropietarios owner = new FrmPropietarios(null, true,this.owner );
       owner.setVisible(true);
    }//GEN-LAST:event_btnBuscarActionPerformed

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
              if (txtIdOwner.getText().length() > 0) {
            if(txtIdOwner.getText().charAt(0) != 'D' && txtIdOwner.getText()!= ""){
           verifyIdOwner(Long.parseLong(txtIdOwner.getText()));
           }
       }
    }//GEN-LAST:event_formWindowGainedFocus

    private void txtIdOwnerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdOwnerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdOwnerActionPerformed

    private void txtIdViviendasMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtIdViviendasMousePressed
    
    }//GEN-LAST:event_txtIdViviendasMousePressed

    private void txtIdViviendasKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtIdViviendasKeyTyped
     onlyNumber(evt);
    }//GEN-LAST:event_txtIdViviendasKeyTyped

    private void txtHabitacionesKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtHabitacionesKeyTyped
        onlyNumber(evt);
    }//GEN-LAST:event_txtHabitacionesKeyTyped

    private void txtCantidadBaniosKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCantidadBaniosKeyTyped
       onlyNumber(evt);
    }//GEN-LAST:event_txtCantidadBaniosKeyTyped
    

    private boolean insertData() {
        if (!txtIdOwner.getText().equals("Debe agregar un IdDiferente!")){
        txtIdViviendas.setEnabled(true);
        txtpDescripcion.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtmtsConstruct.setEnabled(true);
        txtMtsLote.setEnabled(true);
        boolean verify = false;
        String Estado = "";
        String Cochera = "";
        long idVivienda = 0;
        String Descripcion = "";
        String direccion = "";
        float metrosConstruccion = 0;
        float metrosLote = 0;
        String typeConstruction = "";
        String carretera = "";
        int precioBase = 0;
        int depositoGarantia = 0;
        int cedula = 0;
        int cantidadHabitaciones = 0;
        float cantidadBanios = 0;
        String gmail = "";
        if (verifyData()) {

            JOptionPane.showMessageDialog(null, "Ingrese los campos que se le solicite ");

        } else {
            try {
                idVivienda = Long.parseLong(txtIdViviendas.getText());
                Descripcion = txtpDescripcion.getText();
                direccion = txtDireccion.getText();
                metrosConstruccion = Float.parseFloat(txtmtsConstruct.getText());
                metrosLote = Float.parseFloat(txtMtsLote.getText());
                typeConstruction = "" + modelComboConstruccion.getSelectedItem();
                carretera = "" + modelComboCarretera.getSelectedItem();
                precioBase = Integer.parseInt(txtPrecioBase.getText());
                depositoGarantia = Integer.parseInt(txtdepositoGarantia.getText());
                cedula = Integer.parseInt(txtIdOwner.getText());
                cantidadBanios = Float.parseFloat(txtCantidadBanios.getText());
                cantidadHabitaciones = Integer.parseInt(txtHabitaciones.getText());
                 
            } catch (NumberFormatException e) {
                verify = true;
            }

        }
        if (rbnAlquilada.isSelected()) {
            Estado = "Alquilada";
        } else if (rbnDisponible.isSelected()) {
            Estado = "Disponible";
        } else {

            Estado = " Inactivo";
        }
        if (rbnCochera.isSelected()) {
            Cochera = "Si";
        } else {
            Cochera = "No";
        }
        if (!verifyData() && (!verifyExist(idVivienda)) && !verify) {

            Vivienda home = new Vivienda(idVivienda, Descripcion, direccion, metrosConstruccion, metrosLote, typeConstruction, rbnCochera.isSelected(), cantidadHabitaciones, cantidadBanios, carretera, precioBase, depositoGarantia, addOwnerHome(cedula), Estado);
            Home.add(home);
            Object[] row = {home.getIdVivienda(), home.getDescripcion(), home.getDireccion(), home.getMtsConstrucc(), home.getMtsLote(), home.getTipoConstruccion(), Cochera,
                home.getCantHabitac(), home.getCantBanios(), home.getCarretera(), home.getPrecioBase(), home.getDepositoGarantia(), home.getPropietario().getCedula(), home.getEstado()};
            modelTable.addRow(row);
            tblHome.setModel(modelTable);
            JOptionPane.showMessageDialog(null, "Dato insertado");
            tbbdCreate.setSelectedIndex(0);
            clean();
        } else if (verifyExist(idVivienda)) {
            JOptionPane.showMessageDialog(null, "ya existe");

        }else{ 
          JOptionPane.showMessageDialog(null, "Debe ingresar datos validos ");
        }
        }else{
           JOptionPane.showMessageDialog(null,"Debe ingresar un propietario");
        }
        return true;
    }

    private boolean verifyData() {
        
        if (txtIdViviendas.getText().equals("") || txtpDescripcion.getText().equals("")
                || txtDireccion.getText().equals("") || txtmtsConstruct.getText().equals("") || txtMtsLote.getText().equals("")
                || txtHabitaciones.equals("")
                || txtPrecioBase.equals("") || txtdepositoGarantia.equals("")
                || txtIdOwner.getText().length() == 0) {
            if (txtIdOwner.getText().length() > 0) {
                if (txtIdOwner.getText().charAt(0) == 'D') {
                    return true;
                }
            }
            return true;
        } else {
            return false;

        }
    }

    private boolean verifyExist(long idVivienda) {
        for (Vivienda home : Home) {
            if (home.getIdVivienda() == idVivienda) {
                return true;
            }
        }
        return false;
    }

    private void onlyNumber(java.awt.event.KeyEvent evt) {
        int number = evt.getKeyChar();
        boolean verify = number >= 40 && number <= 57;
        if (!verify) {
            evt.consume();

        }
    }

    private Propietario addOwnerHome(int Cedula) {
        for (int i = 0; i < owner.size(); i++) {
            if (Cedula == owner.get(i).getCedula()) {
                Propietario owner = this.owner.get(i);
                return owner;
            }
        }

        return null;
    }

    private Vivienda verifyHome(float IdVivienda) {
        for (int i = 0; i < Home.size(); i++) {
            if (IdVivienda == Home.get(i).getIdVivienda()) {
                Vivienda home = this.Home.get(i);
                return home;
            }
        }

        return null;
    }

    private boolean Deletedata() {
        txtIdViviendas.setEnabled(true);
        txtpDescripcion.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtMtsLote.setEnabled(true);
        txtCantidadBanios.setEnabled(true);

        if (tblHome.getSelectedRow() != -1) {
            String IdViviendaData = modelTable.getValueAt(tblHome.getSelectedRow(), 0).toString();
            long Idviviendas = Long.parseLong(IdViviendaData);
            for (int i = 0; i < Home.size(); i++) {
                if (Home.get(i).getIdVivienda() == Idviviendas) {
                    Home.remove(i);
                    modelTable.removeRow(tblHome.getSelectedRow());
                    tblHome.setModel(modelTable);
                    JOptionPane.showMessageDialog(null, "Propietario Eliminado!");

                    break;

                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");

        }

        clean();

        return true;

    }

    private void modify() {
        //inicialisamos la informacion apenas entre el clip 

        if (tblHome.getSelectedRow() != -1) {
            boolean controlErrores = false;
            char validarFemeninoMasculino = 'F';

            String Estado = "";
            long idVivienda = 0;
            String Descripcion = "";
            String direccion = "";
            float metrosConstruccion = 0;
            float metrosLote = 0;
            String typeConstruction = "";
            String carretera = "";
            int precioBase = 0;
            int depositoGarantia = 0;
            int cedula = 0;
            int cantidadHabitaciones = 0;
            float cantidadBanios = 0;
            if (verifyData()) {
                JOptionPane.showMessageDialog(null, "Ingrese los campos que se le solicite ");
            } else {

                idVivienda = Long.parseLong(txtIdViviendas.getText());
                Descripcion = txtpDescripcion.getText();
                direccion = txtDireccion.getText();
                metrosConstruccion = Float.parseFloat(txtmtsConstruct.getText());
                metrosLote = Float.parseFloat(txtMtsLote.getText());
                typeConstruction = "" + modelComboConstruccion.getSelectedItem();
                carretera = "" + modelComboCarretera.getSelectedItem();
                precioBase = Integer.parseInt(txtPrecioBase.getText());
                depositoGarantia = Integer.parseInt(txtdepositoGarantia.getText());
                cedula = Integer.parseInt(txtIdOwner.getText());
                cantidadBanios = Float.parseFloat(txtCantidadBanios.getText());
                cantidadHabitaciones = Integer.parseInt(txtHabitaciones.getText());
                if (rbnAlquilada.isSelected()) {
                    Estado = "Alquilada";
                } else if (rbnDisponible.isSelected()) {
                    Estado = "Disponible";
                } else {

                    Estado = " Inactivo";
                }
            }

            if (!verifyData()) {
                Vivienda home = verifyHome(idVivienda);

                // si la clase due√±o es diferente de null entra 
                if (home != null) {

                    for (int i = 0; i < Home.size(); i++) {

                        if (home == Home.get(i)) {

                            home = new Vivienda(idVivienda, Descripcion, direccion, metrosConstruccion, metrosLote, typeConstruction, rbnCochera.isSelected(), cantidadHabitaciones, cantidadBanios, carretera, precioBase, depositoGarantia, addOwnerHome(cedula), Estado);
                            Home.set(i, home);
                            modelTable.setValueAt(idVivienda, tblHome.getSelectedRow(), 0);
                            modelTable.setValueAt(Descripcion, tblHome.getSelectedRow(), 1);
                            modelTable.setValueAt(direccion, tblHome.getSelectedRow(), 2);
                            modelTable.setValueAt(metrosConstruccion, tblHome.getSelectedRow(), 3);
                            modelTable.setValueAt(metrosLote, tblHome.getSelectedRow(), 4);
                            modelTable.setValueAt(typeConstruction, tblHome.getSelectedRow(), 5);
                            modelTable.setValueAt(rbnCochera.isSelected(), tblHome.getSelectedRow(), 6);
                            modelTable.setValueAt(cantidadHabitaciones, tblHome.getSelectedRow(), 7);
                            modelTable.setValueAt(cantidadBanios, tblHome.getSelectedRow(), 8);
                            modelTable.setValueAt(carretera, tblHome.getSelectedRow(), 9);
                            modelTable.setValueAt(precioBase, tblHome.getSelectedRow(), 10);
                            modelTable.setValueAt(depositoGarantia, tblHome.getSelectedRow(), 11);
                            modelTable.setValueAt(cedula, tblHome.getSelectedRow(), 12);
                            modelTable.setValueAt(Estado, tblHome.getSelectedRow(), 13);
                            JOptionPane.showMessageDialog(null, "Registro Modificado");

                        }
                    }
                }

                clean();

            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro ");

        }

    }
     private void loadingData(){
       tblHome.setVisible(true);
      for (int i = 0; i < Home.size(); i++) {
           Object[] row = {Home.get(i).getIdVivienda(), Home.get(i).getDescripcion(), Home.get(i).getDireccion(), Home.get(i).getMtsConstrucc(), Home.get(i).getMtsLote(),Home.get(i).getTipoConstruccion(), Home.get(i).getCochera(),
                Home.get(i).getCantHabitac(), Home.get(i).getCantBanios(), Home.get(i).getCarretera(), Home.get(i).getPrecioBase(), Home.get(i).getDepositoGarantia(), Home.get(i).getPropietario().getCedula(), Home.get(i).getEstado()};
          modelTable.addRow(row);
      }
  
     tblHome.setModel(modelTable);
  
  }
 public void verifyIdOwner(long cedula) {
        for (int i = 0; i < Home.size(); i++) {
            if (cedula  == Home.get(i).getPropietario().getCedula()) {
                txtIdOwner.setText("Debe agregar un IdDiferente!");
            }
        }

    }
 private void clean(){
         txtIdViviendas.setText("");
         txtpDescripcion.setText("");
         txtDireccion.setText("");
         txtmtsConstruct.setText("");
          txtMtsLote.setText("");
           txtHabitaciones.setText("");
          txtCantidadBanios.setText("");
          txtPrecioBase.setText("");
            txtdepositoGarantia.setText("");
            txtIdOwner.setText("");
                    
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmVivienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmVivienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmVivienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmVivienda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                FrmVivienda dialog = new FrmVivienda(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel IdViviendas;
    private javax.swing.JLabel Propietario;
    private javax.swing.JButton btnAceptar;
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnBuscar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnModify;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JComboBox<String> cbxCarretera;
    private javax.swing.JComboBox<String> cbxTipoConstruccion;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPopupMenu jPopupMenu1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lblBuscarVivienda;
    private javax.swing.JPanel pnlCrud;
    private javax.swing.JPanel pnladd;
    private javax.swing.JRadioButton rbnAlquilada;
    private javax.swing.JRadioButton rbnCochera;
    private javax.swing.JRadioButton rbnDisponible;
    private javax.swing.JRadioButton rbnInactiva;
    private javax.swing.JTabbedPane tbbdCreate;
    private javax.swing.JTable tblHome;
    private javax.swing.JTextField txtBuscarVivienda;
    private javax.swing.JTextField txtCantidadBanios;
    private javax.swing.JTextField txtDireccion;
    private javax.swing.JTextField txtHabitaciones;
    public static javax.swing.JTextField txtIdOwner;
    private javax.swing.JTextField txtIdViviendas;
    private javax.swing.JTextField txtMtsLote;
    private javax.swing.JTextField txtPrecioBase;
    private javax.swing.JTextField txtdepositoGarantia;
    private javax.swing.JTextField txtmtsConstruct;
    private javax.swing.JTextPane txtpDescripcion;
    // End of variables declaration//GEN-END:variables
}
