/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view;

import clases.Propietario;
//import java.lang.reflect.Array;
import java.util.ArrayList;
//import java.util.Iterator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Sebastian Daniel Martinez
 * @author Jose Andres Cortes
 * @author Criztofer Angulo Lopez
 *
 */
public class FrmPropietarios extends javax.swing.JDialog {
    boolean verify = false ; 
    long cedula = 0;
    private static ArrayList<Propietario> ownerlist = new ArrayList<>();
    String[] titles = {"Cedula", "Nombre", "Direccion", "Telefono", "Genero", "Gmail"};
    DefaultTableModel modelTable = new DefaultTableModel(null, titles);

    /**
     * Creates new form FrmPropietarios
     */
    public FrmPropietarios(java.awt.Frame parent, boolean modal) {

        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //Se utiliza para centrar la ventana
        tblPropietario.setModel(modelTable);
        rbnFemenino.setSelected(true);
        tblPropietario.setVisible(false);
        pnlTable.setVisible(false);
        if (btnModificar.isEnabled()) {
            btnCheck.setEnabled(false);
        }
        this.repaint();
    }

    public FrmPropietarios(java.awt.Frame parent, boolean modal, ArrayList owner) {

        super(parent, modal);
        initComponents();
        this.setLocationRelativeTo(null); //Se utiliza para centrar la ventana
        this.ownerlist = owner;
        tblPropietario.setModel(modelTable);
        rbnFemenino.setSelected(true);
        tblPropietario.setVisible(false);
        pnlTable.setVisible(false);
        if (btnModificar.isEnabled()) {
            btnCheck.setEnabled(false);
        }
        loadingData();
        this.repaint();
        if (parent == null){
            verify = true ; 
            pnlTable.setVisible(true);
            pnlTable.setEnabled(true);
            tblPropietario.setVisible(true);
            btnDelete.setVisible(false);
            btnModificar.setVisible(false);
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        buttonGroup2 = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombrePropietario = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCedulaPropietario = new javax.swing.JTextField();
        txtGmailPropietario = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtDireccion = new javax.swing.JTextArea();
        txtTelefono = new javax.swing.JFormattedTextField();
        jPanel2 = new javax.swing.JPanel();
        rbnFemenino = new javax.swing.JRadioButton();
        rbnMasculino = new javax.swing.JRadioButton();
        jPanel3 = new javax.swing.JPanel();
        btnAgregar = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnModificar = new javax.swing.JButton();
        btnCheck = new javax.swing.JButton();
        pnlTable = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblPropietario = new javax.swing.JTable();
        jLabel7 = new javax.swing.JLabel();
        txtContadorTabla = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        txtBuscarPropietario = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Gestion de Propietarios");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Datos del Propietario", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        jLabel3.setText("Direcci√≥n : ");

        jLabel1.setText("Nombre : ");

        jLabel4.setText("Telefono:");

        txtNombrePropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNombrePropietarioActionPerformed(evt);
            }
        });

        jLabel2.setText("Cedula  : ");

        jLabel5.setText("Gmail  :");

        txtCedulaPropietario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCedulaPropietarioKeyTyped(evt);
            }
        });

        txtGmailPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtGmailPropietarioActionPerformed(evt);
            }
        });

        txtDireccion.setColumns(20);
        txtDireccion.setRows(5);
        jScrollPane1.setViewportView(txtDireccion);

        try {
            txtTelefono.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("####-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(41, 43, 45)), "Genero", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));

        buttonGroup1.add(rbnFemenino);
        rbnFemenino.setText("Femenino");

        buttonGroup1.add(rbnMasculino);
        rbnMasculino.setText("Masculino ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rbnMasculino, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(rbnFemenino))
                .addContainerGap(23, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(rbnFemenino)
                .addGap(18, 18, 18)
                .addComponent(rbnMasculino, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(44, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel1))
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtCedulaPropietario, javax.swing.GroupLayout.DEFAULT_SIZE, 130, Short.MAX_VALUE)
                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtNombrePropietario))
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 69, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtGmailPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 247, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(107, 107, 107)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(314, 314, 314))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(txtCedulaPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(txtGmailPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(28, 28, 28)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(txtNombrePropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel3))
                                .addGap(31, 31, 31)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(txtTelefono, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnAgregar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/agregarInquilino.png"))); // NOI18N
        btnAgregar.setText("Agregar");
        btnAgregar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnAgregar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAgregar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        btnDelete.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/EliminarInquilino.png"))); // NOI18N
        btnDelete.setText("Eliminar");
        btnDelete.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnDelete.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDelete.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnModificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/modificarInquilino.png"))); // NOI18N
        btnModificar.setText("Modificar");
        btnModificar.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        btnModificar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnModificar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnModificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnModificarActionPerformed(evt);
            }
        });

        btnCheck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/ok.png"))); // NOI18N
        btnCheck.setText("OK");
        btnCheck.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCheck.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCheck.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCheckActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnAgregar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnDelete)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnModificar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnCheck, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(17, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnModificar, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE)
                    .addComponent(btnDelete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnAgregar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnCheck, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        pnlTable.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        tblPropietario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tblPropietario.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblPropietarioMouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tblPropietarioMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tblPropietario);

        jLabel7.setText("Cantidad de registros ");

        txtContadorTabla.setText("0");

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtContadorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtContadorTabla, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(78, 78, 78))
        );

        jLabel6.setText("Buscar: ");

        txtBuscarPropietario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBuscarPropietarioActionPerformed(evt);
            }
        });
        txtBuscarPropietario.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtBuscarPropietarioKeyReleased(evt);
            }
        });

        buttonGroup2.add(jRadioButton1);
        jRadioButton1.setText("Direccion");

        buttonGroup2.add(jRadioButton2);
        jRadioButton2.setSelected(true);
        jRadioButton2.setText("Nombre");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtBuscarPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(pnlTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(txtBuscarPropietario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jRadioButton2)
                                .addComponent(jRadioButton1)))
                        .addGap(6, 6, 6)))
                .addGap(18, 18, 18)
                .addComponent(pnlTable, javax.swing.GroupLayout.PREFERRED_SIZE, 328, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void txtGmailPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtGmailPropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtGmailPropietarioActionPerformed

    private void txtBuscarPropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBuscarPropietarioActionPerformed
       
        
        
        
    }//GEN-LAST:event_txtBuscarPropietarioActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        /**
        * Mandamos los campos de textos visibles en el boton delete 
        */
        txtCedulaPropietario.setEnabled(true);
        txtNombrePropietario.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtGmailPropietario.setEnabled(true);
        txtTelefono.setEnabled(true);
        
        
        
        pnlTable.setVisible(false);
        tblPropietario.setVisible(false);
        btnModificar.setEnabled(true);
        btnCheck.setEnabled(false);
        boolean controlErrores = false;
        char validarFemeninoMasculino = 'F';
        long cedula = 0;
        String Nombre = "";
        String direccion = "";
        String telefono = "";
        String gmail = "";
        if (txtCedulaPropietario.getText().equals("") || txtNombrePropietario.getText().equals("")
                || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailPropietario.getText().equals("")) {
            controlErrores = true;
            JOptionPane.showMessageDialog(null, "Ingrese los campos que se le solicite ");
        } else {
            cedula = Long.parseLong(txtCedulaPropietario.getText());
            Nombre = txtNombrePropietario.getText();
            direccion = txtDireccion.getText();
            telefono = txtTelefono.getText();
            gmail = txtGmailPropietario.getText();
        }
        if (rbnMasculino.isSelected()) {
            validarFemeninoMasculino = 'M';
        } else {
            validarFemeninoMasculino = 'F';
        }
        if (!controlErrores && (!verifyExist(cedula))) {
            Propietario propietario = new Propietario(cedula, Nombre, validarFemeninoMasculino, direccion, telefono, gmail);
            ownerlist.add(propietario);
            Object[] row = {propietario.cedula, propietario.getNombre(), propietario.getDireccion(), propietario.getTelefono(), gender(propietario.getGenero()), propietario.getEmail()};
            modelTable.addRow(row);
            tblPropietario.setModel(modelTable);
            clean();
        } else if (verifyExist(cedula)) {
            JOptionPane.showMessageDialog(null, "El propietario con la cedula: " + cedula + " ya existe.");
        }
        clean();
        
     ///mostar   
        pnlTable.setVisible(true);
        tblPropietario.setVisible(true);
        txtContadorTabla.setText("" + tblPropietario.getRowCount());

// TODO add your handling code here:
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void txtCedulaPropietarioKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCedulaPropietarioKeyTyped
        int number = evt.getKeyChar();
        boolean verify = number >= 40 && number <= 57;
        if (!verify) {
            evt.consume();

        }
    }//GEN-LAST:event_txtCedulaPropietarioKeyTyped

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
       /**
        * Mandamos los campos de textos visibles en el boton delete 
        */
        txtCedulaPropietario.setEnabled(true);
        txtNombrePropietario.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtGmailPropietario.setEnabled(true);
        txtTelefono.setEnabled(true);
        
        
        
        if (tblPropietario.getSelectedRow() != -1) {
            String owner = modelTable.getValueAt(tblPropietario.getSelectedRow(), 0).toString();
            long cedula = Long.parseLong(owner);
            for (int i = 0; i < ownerlist.size(); i++) {
                if (ownerlist.get(i).getCedula() == cedula) {
                    ownerlist.remove(i);
                    modelTable.removeRow(tblPropietario.getSelectedRow());
                    tblPropietario.setModel(modelTable);
                    JOptionPane.showMessageDialog(null, "Propietario Eliminado!");
                    clean();
                    break;

                }
            }
        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro");

        }
        
// TODO add your handling code here:
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnModificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnModificarActionPerformed
        //inicialisamos la informacion apenas entre el clip 
        pnlTable.setVisible(true);
        tblPropietario.setVisible(true);
        txtContadorTabla.setText("" + tblPropietario.getRowCount());
        txtCedulaPropietario.setEnabled(false);
        // ponemos los campos txt verdaderos para poder modificarlos
        txtNombrePropietario.setEnabled(true);
        txtDireccion.setEnabled(true);
        txtGmailPropietario.setEnabled(true);
        txtTelefono.setEnabled(true);

        boolean verify = false;
        long cedula = 0;
        try {
            cedula = Long.parseLong(txtCedulaPropietario.getText());
        } catch (NumberFormatException e) {
            verify = true;
        }

        if (txtCedulaPropietario.getText().equals("") || txtNombrePropietario.getText().equals("")
                || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailPropietario.getText().equals("")) {

            JOptionPane.showMessageDialog(null, "Debe rellenar los campos que se le solicite ");
        } else {

            if (verifyExist(cedula) && !verify) {
                pnlTable.setVisible(true);
                btnAgregar.setEnabled(false);
                btnDelete.setEnabled(false);
                txtCedulaPropietario.setEnabled(false);
                tblPropietario.setVisible(true);
                btnModificar.setEnabled(false);
                btnCheck.setEnabled(true);
                view();
                clean();
            } else {
                JOptionPane.showMessageDialog(null, "No se ha insertado el registro ");

            }
        }
        
    }//GEN-LAST:event_btnModificarActionPerformed

    private void tblPropietarioMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPropietarioMouseClicked

        view();
    }//GEN-LAST:event_tblPropietarioMouseClicked

    private void txtNombrePropietarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNombrePropietarioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNombrePropietarioActionPerformed

    private void btnCheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCheckActionPerformed
        int confirm = JOptionPane.showConfirmDialog(null, "Deseas realmente modificar este archivo?");
        if (confirm == 1) {
            pnlTable.setVisible(false);
            btnAgregar.setEnabled(true);
            btnDelete.setEnabled(true);
            txtCedulaPropietario.setEnabled(true);
            tblPropietario.setVisible(false);
            btnModificar.setEnabled(true);
            clean();
        } else if (!txtCedulaPropietario.isEnabled() && tblPropietario.getSelectedRow() != -1) {
            boolean controlErrores = false;
            char validarFemeninoMasculino = 'F';
            long cedula = 0;
            String Nombre = "";
            String direccion = "";
            String telefono = "";
            String gmail = "";
            if (txtCedulaPropietario.getText().equals("") || txtNombrePropietario.getText().equals("")
                    || txtDireccion.getText().equals("") || txtTelefono.getText().equals("") || txtGmailPropietario.getText().equals("")) {
                controlErrores = true;
                JOptionPane.showMessageDialog(null, "Debe rellenar los campos que se le solicite ");
            } else {
                cedula = Long.parseLong(txtCedulaPropietario.getText());
                Nombre = txtNombrePropietario.getText();
                direccion = txtDireccion.getText();
                telefono = txtTelefono.getText();
                gmail = txtGmailPropietario.getText();
            }
            if (rbnMasculino.isSelected()) {
                validarFemeninoMasculino = 'M';
            } else {
                validarFemeninoMasculino = 'F';
            }
            if (!controlErrores) {
                Propietario owner = modify(cedula);
                // si la clase due√±o es diferente de null entra 
                if (owner != null) {
                    for (int i = 0; i < ownerlist.size(); i++) {
                        if (owner == ownerlist.get(i)) {
                            owner = new Propietario(cedula, Nombre, validarFemeninoMasculino, direccion, telefono, gmail);
                            ownerlist.set(i, owner);
                            modelTable.setValueAt(cedula, tblPropietario.getSelectedRow(), 0);
                            modelTable.setValueAt(Nombre, tblPropietario.getSelectedRow(), 1);
                            modelTable.setValueAt(direccion, tblPropietario.getSelectedRow(), 2);
                            modelTable.setValueAt(telefono, tblPropietario.getSelectedRow(), 3);
                            modelTable.setValueAt(gender(validarFemeninoMasculino), tblPropietario.getSelectedRow(), 4);
                            modelTable.setValueAt(gmail, tblPropietario.getSelectedRow(), 5);
                            JOptionPane.showMessageDialog(null, "Registro Modificado");

                        }
                    }
                }
                tblPropietario.setModel(modelTable);
                pnlTable.setVisible(false);
                btnAgregar.setEnabled(true);
                btnDelete.setEnabled(true);
                txtCedulaPropietario.setEnabled(true);
                tblPropietario.setVisible(false);
                btnModificar.setEnabled(true);
                clean();

            }

        } else {
            JOptionPane.showMessageDialog(null, "Debe seleccionar un registro ");

        }

// TODO add your handling code here:
    }//GEN-LAST:event_btnCheckActionPerformed

    private void txtBuscarPropietarioKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtBuscarPropietarioKeyReleased
        pnlTable.setVisible(true);
        tblPropietario.setVisible(true);
        String word = txtBuscarPropietario.getText();
        //Creaci√≥n de los modelos de los Jlist 
        DefaultListModel<String> listModel = new DefaultListModel<String>();
        DefaultTableModel modelTable = new DefaultTableModel(null, titles);
        Propietario owner = new Propietario();

        try {
            for (int i = 0; i < ownerlist.size(); i++) {
                owner = ownerlist.get(i);
                if (owner.getNombre() != null) {
                    //Con est√© linea es posible buscar palabras comparando cada char 
                    String wordTem = owner.getNombre().substring(0, word.length());
                    if (wordTem.contentEquals(txtBuscarPropietario.getText())) {
                        Object[] row = {owner.getCedula(), owner.getNombre(), owner.getDireccion(), gender(owner.getGenero()), owner.getTelefono(), owner.getEmail()};
                        modelTable.addRow(row);
                        tblPropietario.setModel(modelTable);
                        txtContadorTabla.setText("" + tblPropietario.getRowCount());
                    }
                }

            }

        } catch (StringIndexOutOfBoundsException e) {
            JOptionPane.showMessageDialog(null, "No se encontraron resultados");
            txtBuscarPropietario.setText("");
        }

        if (txtBuscarPropietario.getText().equals("")) {
            pnlTable.setVisible(false);
            tblPropietario.setVisible(false);
            tblPropietario.setModel(this.modelTable);
            txtContadorTabla.setText("" + tblPropietario.getRowCount());
        }
        
        ///mostar   
        pnlTable.setVisible(true);
        tblPropietario.setVisible(true);
        txtContadorTabla.setText("" + tblPropietario.getRowCount());

    }//GEN-LAST:event_txtBuscarPropietarioKeyReleased

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void tblPropietarioMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblPropietarioMousePressed
        if (verify && evt.getClickCount() ==1 && tblPropietario.getSelectedRow() != -1 ){
        FrmVivienda.txtIdOwner.setText(modelTable.getValueAt(tblPropietario.getSelectedRow(), 0).toString());
        this.setVisible(false);
       }
    }//GEN-LAST:event_tblPropietarioMousePressed

    private String gender(char gender) {
        if (gender == 'F') {
            return "Femenino";
        } else {
            return "Masculino";
        }

    }

    private boolean verifyExist(long cedula) {
        for (Propietario propietario : ownerlist) {
            if (propietario.getCedula() == cedula) {
                return true;
            }
        }
        return false;
    }

    private Propietario modify(long cedula) {
        for (Propietario propietario : ownerlist) {
            if (propietario.getCedula() == cedula) {
                return propietario;
            }
        }
        return null;
    }

    private void clean() {
        txtCedulaPropietario.setText("");
        txtNombrePropietario.setText("");
        txtDireccion.setText("");
        txtTelefono.setText("");
        txtGmailPropietario.setText("");
    }

    private void view() {
        if (tblPropietario.getSelectedRow() != -1) {
            this.cedula = Long.parseLong(modelTable.getValueAt(tblPropietario.getSelectedRow(), 0).toString());
            txtCedulaPropietario.setText("" + cedula);
            txtNombrePropietario.setText("" + modelTable.getValueAt(tblPropietario.getSelectedRow(), 1));
            txtDireccion.setText("" + modelTable.getValueAt(tblPropietario.getSelectedRow(), 2));
            txtTelefono.setText("" + modelTable.getValueAt(tblPropietario.getSelectedRow(), 3));
            txtGmailPropietario.setText("" + modelTable.getValueAt(tblPropietario.getSelectedRow(), 5));
            String gender = "" + modelTable.getValueAt(tblPropietario.getSelectedRow(), 4);
            if (gender.charAt(0) == 'F') {
                rbnFemenino.setSelected(true);
            } else {
                rbnMasculino.setSelected(true);

            }
        }

    }
  private void loadingData(){
      for (int i = 0; i < ownerlist.size(); i++) {
          Object[] data = {ownerlist.get(i).getCedula(),ownerlist.get(i).getNombre(),ownerlist.get(i).getDireccion(),
              ownerlist.get(i).getTelefono(),gender(ownerlist.get(i).getGenero()),ownerlist.get(i).getEmail()};
          modelTable.addRow(data);
      }
  
     tblPropietario.setModel(modelTable);
  
  }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmPropietarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmPropietarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmPropietarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmPropietarios.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                FrmPropietarios dialog = new FrmPropietarios(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnCheck;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnModificar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.ButtonGroup buttonGroup2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JRadioButton rbnFemenino;
    private javax.swing.JRadioButton rbnMasculino;
    private javax.swing.JTable tblPropietario;
    private javax.swing.JTextField txtBuscarPropietario;
    private javax.swing.JTextField txtCedulaPropietario;
    private javax.swing.JTextField txtContadorTabla;
    private javax.swing.JTextArea txtDireccion;
    private javax.swing.JTextField txtGmailPropietario;
    private javax.swing.JTextField txtNombrePropietario;
    private javax.swing.JFormattedTextField txtTelefono;
    // End of variables declaration//GEN-END:variables
}
